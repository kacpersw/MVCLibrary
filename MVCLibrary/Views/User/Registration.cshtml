@model MVCLibrary.Models.Users

@{
    ViewBag.Title = "Registration";
}
<div class="text-center">
    <h2>Rejestracja</h2>
</div>


@if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    if (ViewBag.Message != null)
    {
        <div class="alet alert-success">
            <strong>Sukces!</strong> @ViewBag.Message
        </div>
    }
}
else
{
    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="text-center">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <br/>
            <div class="text-center">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "text-center" })
                <div class="text-center">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "text-center" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="text-center">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "text-center" })
                <br />
                <div class="text-center">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "text-center" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="text-center">
                @Html.LabelFor(model => model.EmailID, htmlAttributes: new { @class = "text-center" })
                <br />
                <div class="text-center">
                    @Html.EditorFor(model => model.EmailID, new { htmlAttributes = new { @class = "text-center" } })
                    @Html.ValidationMessageFor(model => model.EmailID, "", new { @class = "text-danger" })
                    @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="text-center">
                @Html.LabelFor(model => model.Pass, htmlAttributes: new { @class = "text-center" })
                <br />
                <div class="text-center">
                    @Html.EditorFor(model => model.Pass, new { htmlAttributes = new { @class = "text-center" } })
                    @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPass, htmlAttributes: new { @class = "text-center" })
                <br />
                <div class="text-center">
                    @Html.EditorFor(model => model.ConfirmPass, new { htmlAttributes = new { @class = "text-center" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPass, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="text-center">
                <label for="role">Rola</label>
                <br />
                <div>
                    <select name="Role" id="role" class="inputs-size-bigger" required>
                        <option value="Admin">Administrator</option>
                        <option value="Worker">Pracownik</option>
                        <option value="User">Użytkownik</option>
                    </select>
                </div>
            </div>
            
            <br />
            <div class="text-center">
                <div class="text-center">
                    <input type="submit" value="Zarejestruj się" class="btn btn-success" />
                </div>
            </div>
        </div>

        if (ViewBag.Message != null)
        {
            <div class="alet alert-danger">
                <strong>Błąd!</strong> @ViewBag.Message
            </div>
        }
    }
}



@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
}
